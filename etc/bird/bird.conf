# THIS CONFIG FILE IS NOT A COMPLETE DOCUMENTATION
# PLEASE LOOK IN THE BIRD DOCUMENTATION FOR MORE INFO

# However, most of options used here are just for example
# and will be removed in real-life configs.

log syslog all;

# Override router ID
router id 10.100.100.2;

# Turn on global debugging of all protocols
#debug protocols all;

# The direct protocol automatically generates device routes to all network
# interfaces. Can exist in as many instances as you wish if you want to
# populate multiple routing tables with device routes. Because device routes
# are handled by Linux kernel, this protocol is  usually not needed.
protocol direct {
	ipv4;
	ipv6;
	interface "eth0";	# Restrict network interfaces it works with
}

# This pseudo-protocol performs synchronization between BIRD's routing
# tables and the kernel. You can run multiple instances of the kernel
# protocol and synchronize different kernel tables with different BIRD tables.


protocol kernel {
	learn;			# Learn all alien routes from the kernel
#	persist;		# Don't remove routes on bird shutdown
	scan time 20;		# Scan kernel routing table every 20 seconds
	ipv4 {
		#import all;		# Default is import all
		import none;
		export all;		# Default is export none
	};
}

protocol kernel {
	learn;			# Learn all alien routes from the kernel
#	persist;		# Don't remove routes on bird shutdown
	scan time 20;		# Scan kernel routing table every 20 seconds
	ipv6 {
		import none;
		export all;
	};
}
# This pseudo-protocol watches all interface up/down events.
protocol device {
	scan time 10;		# Scan interfaces every 10 seconds
}

# Static routes (again, there can be multiple instances, so that you
# can disable/enable various groups of static routes on the fly).

protocol bgp bgp_up1{
	ipv4 {
		import all;
		export all;		# Default is export none
	};
	ipv6 {
		import all;
		export all;
	};
	local as 65018;
	neighbor 10.100.100.1 as 65004;
	graceful restart;
}
